import{_ as o,Z as l,$ as d,a0 as n,a2 as e,a3 as a,a1 as i,a4 as t,I as r}from"./framework-c23f4b14.js";const c={},p=e("strong",null,"Table of Contents",-1),u={href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"},h=t('<ul><li><a href="#%E5%88%9D%E5%A7%8B">初始</a><ul><li><a href="#%E5%AE%89%E8%A3%85git">安装Git</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E7%AD%BE%E5%90%8D">设置用户签名</a></li></ul></li><li><a href="#%E6%8F%90%E4%BA%A4%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93">提交到远程仓库</a></li><li><a href="#%E6%95%99%E7%A8%8B">教程</a></li></ul>',1),g=e("h2",{id:"初始",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#初始","aria-hidden":"true"},"#"),a(" 初始")],-1),m=e("h3",{id:"安装git",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装git","aria-hidden":"true"},"#"),a(" 安装Git")],-1),b={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://npm.taobao.org/mirrors/git-for-windows/",target:"_blank",rel:"noopener noreferrer"},f=t(`<p>下载完之后安装，一键默认即可</p><h3 id="设置用户签名" tabindex="-1"><a class="header-anchor" href="#设置用户签名" aria-hidden="true">#</a> 设置用户签名</h3><p>Git 首次安装必须设置一下用户签名，否则无法提交代码</p><p>基本语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name 用户名
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email 邮箱
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>签名作用：</p><p>每次提交到远程时区分不同操作者，在每次的提交信息中能看到。</p><p>在 <code>C:\\Users\\用户名\\</code>目录下 <code>.gitconfig</code> 文件查看配置信息</p><h2 id="提交到远程仓库" tabindex="-1"><a class="header-anchor" href="#提交到远程仓库" aria-hidden="true">#</a> 提交到远程仓库</h2><ol><li><p>创建远程仓库</p><p>在 GitHub/Gitee 中创建仓库</p><p>主分支一般设置为 <code>master</code></p></li><li><p>初始化本地库</p><p>在本地仓库目录下，打开 Git Bash</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>项目文件夹下就会生成.git文件，这是一个隐藏文件。</p></li><li><p>添加远程仓库地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/oddfar/docs.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把链接替换成自己的</p></li><li><p>拉取远程仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span>  pull origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>作用是拉取远程仓库的文件，拉取本地没有的文件和新更改的文件</p></li><li><p>添加暂存区</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code> .</code>把所有文件添加到暂存区</p><p>添加指定文件：<code>git add 文件名</code></p><p>注意 add 后面有空格</p></li><li><p>提交本地库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;日志信息&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将暂存区的文件提交到本地库</p><p>使用 <code>git status</code> 查看状态</p></li><li><p>同步到远程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>至此，已成功提交到远程。</p><hr><p>也可以创建好远程仓库后，直接克隆到本地</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/oddfar/docs.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把本地代码，复制到下载的目录</p><p>再从第五步开始提交到 GitHub</p><p>https 在国内不太稳定，有时候链接不上，建议用 SSH 链接来对仓库进行管理</p>`,17);function _(E,k){const s=r("ExternalLinkIcon");return l(),d("div",null,[n(" START doctoc generated TOC please keep comment here to allow auto update "),n(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE "),e("p",null,[p,a(),e("em",null,[a("generated with "),e("a",u,[a("DocToc"),i(s)])])]),h,n(" END doctoc generated TOC please keep comment here to allow auto update "),g,m,e("p",null,[a("官网： "),e("a",b,[a("https://git-scm.com/"),i(s)])]),e("p",null,[a("下载慢可使用淘宝镜像下载："),e("a",v,[a("https://npm.taobao.org/mirrors/git-for-windows/"),i(s)])]),f])}const B=o(c,[["render",_],["__file","11.html.vue"]]);export{B as default};
