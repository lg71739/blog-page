import{_ as n,Z as t,$ as i,a2 as a,a3 as e,a1 as l,a4 as r,I as c}from"./framework-c23f4b14.js";const d={},o=a("h2",{id:"下载镜像文件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#下载镜像文件","aria-hidden":"true"},"#"),e(" 下载镜像文件")],-1),p={href:"https://hub.docker.com/_/mysql/tags",target:"_blank",rel:"noopener noreferrer"},m=r(`<p>由于\`\`默认拉取最新版的镜像，所以推荐添加上版本号信息(本文使用5.7.41版本)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql:5.7.41
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/02/14_14_41_17_14_14_11_33_image-20230214141133953.png" alt="拉取镜像" tabindex="0" loading="lazy"><figcaption>拉取镜像</figcaption></figure><h2 id="创建存储目录" tabindex="-1"><a class="header-anchor" href="#创建存储目录" aria-hidden="true">#</a> 创建存储目录</h2><p>为了数据的持久化，新建一个存储目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mydata/mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="创建mysql配置" tabindex="-1"><a class="header-anchor" href="#创建mysql配置" aria-hidden="true">#</a> 创建MySQL配置</h2><div class="hint-container warning"><p class="hint-container-title">提醒</p><p>最新官方MySQL(5.7.19)的docker镜像在创建时映射的配置文件目录有所不同，在此记录并分享给大家：</p><p>官方原文：</p><p>The MySQL startup configuration is specified in the file <code>/etc/mysql/my.cnf</code>, and that file in turn includes any files found in the <code>/etc/mysql/conf.d</code> directory that end with <code>.cnf</code>. Settings in files in this directory will augment and/or override settings in <code>/etc/mysql/my.cnf</code>. If you want to use a customized MySQL configuration, you can create your alternative configuration file in a directory on the host machine and then mount that directory location as <code>/etc/mysql/conf.d</code> inside the <code>mysql</code> container.</p><p>大概意思是说：</p><p>MySQL(5.7.19)的默认配置文件是 /etc/mysql/my.cnf 文件。如果想要自定义配置，建议向 /etc/mysql/conf.d 目录中创建 .cnf 文件。新建的文件可以任意起名，只要保证后缀名是 cnf 即可。新建的文件中的配置项可以覆盖 /etc/mysql/my.cnf 中的配置项。</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mydata/mysql/conf
<span class="token builtin class-name">cd</span> /mydata/mysql/conf
<span class="token function">touch</span> my.cnf
<span class="token function">vim</span> my.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件中插入如下内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>client<span class="token punctuation">]</span>
default-character-set<span class="token operator">=</span>utf8

<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>
default-character-set<span class="token operator">=</span>utf8
<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
<span class="token assign-left variable">init_connect</span><span class="token operator">=</span><span class="token string">&#39;SET collation_connection = utf8_unicode_ci&#39;</span>
<span class="token assign-left variable">init_connect</span><span class="token operator">=</span><span class="token string">&#39;SET NAMES utf8&#39;</span>
character-set-server<span class="token operator">=</span>utf8
collation-server<span class="token operator">=</span>utf8_unicode_ci
skip-character-set-client-handshake
skip-name-resolve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建实例" tabindex="-1"><a class="header-anchor" href="#创建实例" aria-hidden="true">#</a> 创建实例</h2><ul><li><p>新版本( 5.7.19 及以上 )</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-v</span> /mydata/mysql/log:/var/log/mysql <span class="token parameter variable">-v</span> /mydata/mysql/data:/var/lib/mysql <span class="token parameter variable">-v</span> /mydata/mysql/conf:/etc/mysql/conf.d <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>root <span class="token parameter variable">-d</span> mysql:5.7.41
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>旧版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-v</span> /mydata/mysql/log:/var/log/mysql <span class="token parameter variable">-v</span> /mydata/mysql/data:/var/lib/mysql <span class="token parameter variable">-v</span> /mydata/mysql/conf:/etc/mysql <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>root <span class="token parameter variable">-d</span> mysql:5.7.41
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><figure><img src="https://jihulab.com/byzh123/images/raw/images/pictures/2023/02/14_22_26_0_202302142226394.png" alt="创建实例" tabindex="0" loading="lazy"><figcaption>创建实例</figcaption></figure><blockquote><p>参数说明:</p></blockquote><table><thead><tr><th>参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>-p 3306:3306</td><td style="text-align:left;">将容器的3306端口映射到主机的3306端口</td></tr><tr><td>-name mysql</td><td style="text-align:left;">为当前启动的容器命名</td></tr><tr><td>-v /mydata/mysql/log:/var/log/mysql</td><td style="text-align:left;">将配置文件夹挂载到主机</td></tr><tr><td>-v /mydata/mysql/data:/var/lib/mysql</td><td style="text-align:left;">将日志文件夹挂载到主机</td></tr><tr><td>-v /mydata/mysql/conf:/etc/mysql</td><td style="text-align:left;">将配置文件夹挂载到主机</td></tr><tr><td>-e MYSQL_ROOT_PASSWORD=root</td><td style="text-align:left;">初始化root的密码</td></tr><tr><td>-d</td><td style="text-align:left;">后台运行</td></tr><tr><td>mysql:5.7.41</td><td style="text-align:left;">指定运行的镜像</td></tr></tbody></table><h2 id="查看运行情况" tabindex="-1"><a class="header-anchor" href="#查看运行情况" aria-hidden="true">#</a> 查看运行情况</h2><p>输入如下命令查看mysql的运行情况</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/raw/images/pictures/2023/02/14_22_27_42_202302142227693.png" alt="image-20230214222742656" tabindex="0" loading="lazy"><figcaption>image-20230214222742656</figcaption></figure><h2 id="设置随docker自启" tabindex="-1"><a class="header-anchor" href="#设置随docker自启" aria-hidden="true">#</a> 设置随Docker自启</h2><p>执行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> update mysql <span class="token parameter variable">--restart</span><span class="token operator">=</span>always
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/raw/images/pictures/2023/02/14_22_38_2_202302142238778.png" alt="image-20230214223802742" tabindex="0" loading="lazy"><figcaption>image-20230214223802742</figcaption></figure><h2 id="连接测试" tabindex="-1"><a class="header-anchor" href="#连接测试" aria-hidden="true">#</a> 连接测试</h2><p>通过工具连接数据库测试</p><figure><img src="https://jihulab.com/byzh123/images/raw/images/pictures/2023/02/14_22_41_12_202302142241873.png" alt="image-20230214224112828" tabindex="0" loading="lazy"><figcaption>image-20230214224112828</figcaption></figure>`,27);function u(h,v){const s=c("ExternalLinkIcon");return t(),i("div",null,[o,a("p",null,[e("镜像仓库地址: "),a("a",p,[e("https://hub.docker.com/_/mysql/tags"),l(s)])]),m])}const b=n(d,[["render",u],["__file","1676341855282.html.vue"]]);export{b as default};
