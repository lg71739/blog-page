const e=JSON.parse('{"key":"v-1232289e","path":"/backend/orm/mybatisplus/30/20-1678862081209.html","title":"自动填充","lang":"zh-CN","frontmatter":{"title":"自动填充","order":20,"date":"2023-03-15T00:00:00.000Z","permalink":"/backend/orm/mybatisplus/30/20-1678862081209.html","category":["ORM","MyBatis"],"tag":["ORM","MyBatis"],"description":"#自动填充 原理 实现元对象处理器接口：com.baomidou.mybatisplus.core.handlers.MetaObjectHandler 填充原理是直接给entity的属性设置值 实现 注解填充字段 @TableField(.. fill = FieldFill.INSERT) 生成器策略部分也可以配置！ public class User { // 注意！这里需要标记为填充字段 @TableField(.. fill = FieldFill.INSERT) private String fillField; .... }","head":[["meta",{"property":"og:url","content":"https://notes.819000.xyz/backend/orm/mybatisplus/30/20-1678862081209.html"}],["meta",{"property":"og:site_name","content":"个人笔记"}],["meta",{"property":"og:title","content":"自动填充"}],["meta",{"property":"og:description","content":"#自动填充 原理 实现元对象处理器接口：com.baomidou.mybatisplus.core.handlers.MetaObjectHandler 填充原理是直接给entity的属性设置值 实现 注解填充字段 @TableField(.. fill = FieldFill.INSERT) 生成器策略部分也可以配置！ public class User { // 注意！这里需要标记为填充字段 @TableField(.. fill = FieldFill.INSERT) private String fillField; .... }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:06:48.000Z"}],["meta",{"property":"article:author","content":"李广妮"}],["meta",{"property":"article:tag","content":"ORM"}],["meta",{"property":"article:tag","content":"MyBatis"}],["meta",{"property":"article:published_time","content":"2023-03-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:06:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自动填充\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:06:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李广妮\\",\\"url\\":\\"https://notes.819000.xyz\\"}]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1678871208000,"updatedTime":1678871208000,"contributors":[{"name":"liguangni","email":"liguangfenglucky@163.com","commits":1}]},"readingTime":{"minutes":1.62,"words":485},"filePathRelative":"backend/orm/mybatisplus/30.拓展/20.自动填充.md","localizedDate":"2023年3月15日","excerpt":"<p>#自动填充</p>\\n<h2> 原理</h2>\\n<p>实现元对象处理器接口：com.baomidou.mybatisplus.core.handlers.MetaObjectHandler</p>\\n<p>填充原理是直接给<code>entity</code>的属性设置值</p>\\n<h2> 实现</h2>\\n<ul>\\n<li>注解填充字段 <code>@TableField(.. fill = FieldFill.INSERT)</code> 生成器策略部分也可以配置！</li>\\n</ul>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">User</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token comment\\">// 注意！这里需要标记为填充字段</span>\\n    <span class=\\"token annotation punctuation\\">@TableField</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span> fill <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">FieldFill</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INSERT</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> fillField<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
