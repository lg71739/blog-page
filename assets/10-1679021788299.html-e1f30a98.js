const n=JSON.parse('{"key":"v-6bb6e48c","path":"/backend/orm/mybatisplus/40/10-1679021788299.html","title":"分页插件","lang":"zh-CN","frontmatter":{"title":"分页插件","order":10,"date":"2023-03-17T00:00:00.000Z","permalink":"/backend/orm/mybatisplus/40/10-1679021788299.html","category":["ORM","MyBatisPlus"],"tag":["ORM","MyBatisPlus"],"description":"分页插件 分页插件 MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能 添加配置类MyBatisPlusConfig @Configuration @MapperScan(\\"com.atguigu.mybatisplus.mapper\\") public class MyBatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor(){ MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); //添加分页插件 interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL)); return interceptor; } } 编写测试方法 @Test public void testPage(){ //new Page()中的两个参数分别是当前页码，每页显示数量 Page&lt;User&gt; page = userMapper.selectPage(new Page&lt;&gt;(1, 2), null); List&lt;User&gt; users = page.getRecords(); users.forEach(System.out::println); }","head":[["meta",{"property":"og:url","content":"https://notes.819000.xyz/backend/orm/mybatisplus/40/10-1679021788299.html"}],["meta",{"property":"og:site_name","content":"个人笔记"}],["meta",{"property":"og:title","content":"分页插件"}],["meta",{"property":"og:description","content":"分页插件 分页插件 MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能 添加配置类MyBatisPlusConfig @Configuration @MapperScan(\\"com.atguigu.mybatisplus.mapper\\") public class MyBatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor(){ MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); //添加分页插件 interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL)); return interceptor; } } 编写测试方法 @Test public void testPage(){ //new Page()中的两个参数分别是当前页码，每页显示数量 Page&lt;User&gt; page = userMapper.selectPage(new Page&lt;&gt;(1, 2), null); List&lt;User&gt; users = page.getRecords(); users.forEach(System.out::println); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T03:45:45.000Z"}],["meta",{"property":"article:author","content":"李广妮"}],["meta",{"property":"article:tag","content":"ORM"}],["meta",{"property":"article:tag","content":"MyBatisPlus"}],["meta",{"property":"article:published_time","content":"2023-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T03:45:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分页插件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-17T03:45:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李广妮\\",\\"url\\":\\"https://notes.819000.xyz\\"}]}"]]},"headers":[{"level":2,"title":"分页插件","slug":"分页插件-1","link":"#分页插件-1","children":[]},{"level":2,"title":"自定义分页","slug":"自定义分页","link":"#自定义分页","children":[]}],"git":{"createdTime":1679023116000,"updatedTime":1679024745000,"contributors":[{"name":"liguangni","email":"liguangfenglucky@163.com","commits":2}]},"readingTime":{"minutes":1.04,"words":311},"filePathRelative":"backend/orm/mybatisplus/40.插件/10.分页插件.md","localizedDate":"2023年3月17日","excerpt":"<h1> 分页插件</h1>\\n<h2> 分页插件</h2>\\n<blockquote>\\n<p>MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能</p>\\n</blockquote>\\n<ul>\\n<li>\\n<p>添加配置类<code>MyBatisPlusConfig</code></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Configuration</span>\\n<span class=\\"token annotation punctuation\\">@MapperScan</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"com.atguigu.mybatisplus.mapper\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyBatisPlusConfig</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Bean</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">MybatisPlusInterceptor</span> <span class=\\"token function\\">mybatisPlusInterceptor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">MybatisPlusInterceptor</span> interceptor <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">MybatisPlusInterceptor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">//添加分页插件</span>\\n        interceptor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addInnerInterceptor</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">PaginationInnerInterceptor</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">DbType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">MYSQL</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> interceptor<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>编写测试方法</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Test</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">testPage</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//new Page()中的两个参数分别是当前页码，每页显示数量</span>\\n    <span class=\\"token class-name\\">Page</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">&gt;</span></span> page <span class=\\"token operator\\">=</span> userMapper<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">selectPage</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Page</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">&gt;</span></span> users <span class=\\"token operator\\">=</span> page<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getRecords</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    users<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token operator\\">::</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{n as data};
