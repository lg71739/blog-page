const s=JSON.parse(`{"key":"v-20b56cce","path":"/backend/orm/mybatisplus/30/40-1679021927220.html","title":"多数据源","lang":"zh-CN","frontmatter":{"title":"多数据源","order":40,"date":"2023-03-17T00:00:00.000Z","permalink":"/backend/orm/mybatisplus/30/40-1679021927220.html","category":["ORM","MyBatisPlus"],"tag":["ORM","MyBatisPlus"],"description":"多数据源 适用于多种场景：纯粹多库、 读写分离、 一主多从、 混合模式等 场景说明： 我们创建两个库，分别为：mybatis_plus（以前的库不动）与mybatis_plus_1（新建），将mybatis_plus库的product表移动到mybatis_plus_1库，这样每个库一张表，通过一个测试用例分别获取用户数据与商品数据，如果获取到说明多库模拟成功 创建数据库及表 创建数据库mybatis_plus_1和表\`product CREATE DATABASE \`mybatis_plus_1\` /*!40100 DEFAULT CHARACTER SET utf8mb4 */; use \`mybatis_plus_1\`; CREATE TABLE product ( id BIGINT(20) NOT NULL COMMENT '主键ID', name VARCHAR(30) NULL DEFAULT NULL COMMENT '商品名称', price INT(11) DEFAULT 0 COMMENT '价格', version INT(11) DEFAULT 0 COMMENT '乐观锁版本号', PRIMARY KEY (id) ); 添加测试数据 INSERT INTO product (id, NAME, price) VALUES (1, '外星人笔记本', 100); 删除mybatis_plus库中的product表 use mybatis_plus; DROP TABLE IF EXISTS product;","head":[["meta",{"property":"og:url","content":"https://notes.819000.xyz/backend/orm/mybatisplus/30/40-1679021927220.html"}],["meta",{"property":"og:site_name","content":"个人笔记"}],["meta",{"property":"og:title","content":"多数据源"}],["meta",{"property":"og:description","content":"多数据源 适用于多种场景：纯粹多库、 读写分离、 一主多从、 混合模式等 场景说明： 我们创建两个库，分别为：mybatis_plus（以前的库不动）与mybatis_plus_1（新建），将mybatis_plus库的product表移动到mybatis_plus_1库，这样每个库一张表，通过一个测试用例分别获取用户数据与商品数据，如果获取到说明多库模拟成功 创建数据库及表 创建数据库mybatis_plus_1和表\`product CREATE DATABASE \`mybatis_plus_1\` /*!40100 DEFAULT CHARACTER SET utf8mb4 */; use \`mybatis_plus_1\`; CREATE TABLE product ( id BIGINT(20) NOT NULL COMMENT '主键ID', name VARCHAR(30) NULL DEFAULT NULL COMMENT '商品名称', price INT(11) DEFAULT 0 COMMENT '价格', version INT(11) DEFAULT 0 COMMENT '乐观锁版本号', PRIMARY KEY (id) ); 添加测试数据 INSERT INTO product (id, NAME, price) VALUES (1, '外星人笔记本', 100); 删除mybatis_plus库中的product表 use mybatis_plus; DROP TABLE IF EXISTS product;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T03:45:45.000Z"}],["meta",{"property":"article:author","content":"李广妮"}],["meta",{"property":"article:tag","content":"ORM"}],["meta",{"property":"article:tag","content":"MyBatisPlus"}],["meta",{"property":"article:published_time","content":"2023-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T03:45:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多数据源\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-17T03:45:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李广妮\\",\\"url\\":\\"https://notes.819000.xyz\\"}]}"]]},"headers":[{"level":2,"title":"创建数据库及表","slug":"创建数据库及表","link":"#创建数据库及表","children":[]},{"level":2,"title":"新建工程引入依赖","slug":"新建工程引入依赖","link":"#新建工程引入依赖","children":[]},{"level":2,"title":"编写配置文件","slug":"编写配置文件","link":"#编写配置文件","children":[]},{"level":2,"title":"创建实体类","slug":"创建实体类","link":"#创建实体类","children":[]},{"level":2,"title":"创建Mapper及Service","slug":"创建mapper及service","link":"#创建mapper及service","children":[]},{"level":2,"title":"编写测试方法","slug":"编写测试方法","link":"#编写测试方法","children":[]}],"git":{"createdTime":1679023116000,"updatedTime":1679024745000,"contributors":[{"name":"liguangni","email":"liguangfenglucky@163.com","commits":2}]},"readingTime":{"minutes":2.14,"words":642},"filePathRelative":"backend/orm/mybatisplus/30.拓展/40.多数据源.md","localizedDate":"2023年3月17日","excerpt":"<h1> 多数据源</h1>\\n<blockquote>\\n<p>适用于多种场景：纯粹多库、 读写分离、 一主多从、 混合模式等</p>\\n</blockquote>\\n<p>场景说明：</p>\\n<p>我们创建两个库，分别为：<code>mybatis_plus</code>（以前的库不动）与<code>mybatis_plus_1</code>（新建），将mybatis_plus库的<code>product</code>表移动到mybatis_plus_1库，这样每个库一张表，通过一个测试用例分别获取用户数据与商品数据，如果获取到说明多库模拟成功</p>\\n<h2> 创建数据库及表</h2>\\n<ul>\\n<li>\\n<p>创建数据库<code>mybatis_plus_1</code>和表\`product</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">DATABASE</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">\`</span>mybatis_plus_1<span class=\\"token punctuation\\">\`</span></span> <span class=\\"token comment\\">/*!40100 DEFAULT CHARACTER SET utf8mb4 */</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">use</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">\`</span>mybatis_plus_1<span class=\\"token punctuation\\">\`</span></span><span class=\\"token punctuation\\">;</span> \\n<span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> product <span class=\\"token punctuation\\">(</span> \\n    id <span class=\\"token keyword\\">BIGINT</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">NOT</span> <span class=\\"token boolean\\">NULL</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">'主键ID'</span><span class=\\"token punctuation\\">,</span> \\n    name <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span> <span class=\\"token boolean\\">NULL</span> <span class=\\"token keyword\\">DEFAULT</span> <span class=\\"token boolean\\">NULL</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">'商品名称'</span><span class=\\"token punctuation\\">,</span> \\n    price <span class=\\"token keyword\\">INT</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">11</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">DEFAULT</span> <span class=\\"token number\\">0</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">'价格'</span><span class=\\"token punctuation\\">,</span> \\n    version <span class=\\"token keyword\\">INT</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">11</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">DEFAULT</span> <span class=\\"token number\\">0</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">'乐观锁版本号'</span><span class=\\"token punctuation\\">,</span> \\n    <span class=\\"token keyword\\">PRIMARY</span> <span class=\\"token keyword\\">KEY</span> <span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span> \\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>添加测试数据</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> product <span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">,</span> NAME<span class=\\"token punctuation\\">,</span> price<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'外星人笔记本'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>删除<code>mybatis_plus</code>库中的<code>product</code>表</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">use</span> mybatis_plus<span class=\\"token punctuation\\">;</span> \\n<span class=\\"token keyword\\">DROP</span> <span class=\\"token keyword\\">TABLE</span> <span class=\\"token keyword\\">IF</span> <span class=\\"token keyword\\">EXISTS</span> product<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}`);export{s as data};
