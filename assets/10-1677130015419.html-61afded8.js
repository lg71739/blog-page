const n=JSON.parse('{"key":"v-342c54a0","path":"/backend/orm/mybatisplus/20/10-1677130015419.html","title":"CRUD实现","lang":"zh-CN","frontmatter":{"title":"CRUD实现","order":10,"date":"2023-02-23T00:00:00.000Z","permalink":"/backend/orm/mybatisplus/20/10-1677130015419.html","category":["ORM","MyBatisPlus"],"tag":["ORM","MyBatisPlus"],"description":"BaseMapper&lt;T&gt;实现CRUD 简介 MyBatis-Plus中的基本CRUD在内置的BaseMapper中都已得到了实现，因此我们继承该接口以后可以直接使用。 提供方法列表 增加：Insert // 插入一条记录 int insert(T entity); 删除：Delete // 根据 entity 条件，删除记录 int delete(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; wrapper); // 删除（根据ID 批量删除） int deleteBatchIds(@Param(Constants.COLLECTION) Collection&lt;? extends Serializable&gt; idList); // 根据 ID 删除 int deleteById(Serializable id); // 根据 columnMap 条件，删除记录 int deleteByMap(@Param(Constants.COLUMN_MAP) Map&lt;String, Object&gt; columnMap); 修改：Update // 根据 whereWrapper 条件，更新记录 int update(@Param(Constants.ENTITY) T updateEntity, @Param(Constants.WRAPPER) Wrapper&lt;T&gt; whereWrapper); // 根据 ID 修改 int updateById(@Param(Constants.ENTITY) T entity); 查询：Selete // 根据 ID 查询 T selectById(Serializable id); // 根据 entity 条件，查询一条记录 T selectOne(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 查询（根据ID 批量查询） List&lt;T&gt; selectBatchIds(@Param(Constants.COLLECTION) Collection&lt;? extends Serializable&gt; idList); // 根据 entity 条件，查询全部记录 List&lt;T&gt; selectList(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 查询（根据 columnMap 条件） List&lt;T&gt; selectByMap(@Param(Constants.COLUMN_MAP) Map&lt;String, Object&gt; columnMap); // 根据 Wrapper 条件，查询全部记录 List&lt;Map&lt;String, Object&gt;&gt; selectMaps(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 Wrapper 条件，查询全部记录。注意： 只返回第一个字段的值 List&lt;Object&gt; selectObjs(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 entity 条件，查询全部记录（并翻页） IPage&lt;T&gt; selectPage(IPage&lt;T&gt; page, @Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 Wrapper 条件，查询全部记录（并翻页） IPage&lt;Map&lt;String, Object&gt;&gt; selectMapsPage(IPage&lt;T&gt; page, @Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 Wrapper 条件，查询总记录数 Integer selectCount(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper);","head":[["meta",{"property":"og:url","content":"https://notes.819000.xyz/backend/orm/mybatisplus/20/10-1677130015419.html"}],["meta",{"property":"og:site_name","content":"个人笔记"}],["meta",{"property":"og:title","content":"CRUD实现"}],["meta",{"property":"og:description","content":"BaseMapper&lt;T&gt;实现CRUD 简介 MyBatis-Plus中的基本CRUD在内置的BaseMapper中都已得到了实现，因此我们继承该接口以后可以直接使用。 提供方法列表 增加：Insert // 插入一条记录 int insert(T entity); 删除：Delete // 根据 entity 条件，删除记录 int delete(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; wrapper); // 删除（根据ID 批量删除） int deleteBatchIds(@Param(Constants.COLLECTION) Collection&lt;? extends Serializable&gt; idList); // 根据 ID 删除 int deleteById(Serializable id); // 根据 columnMap 条件，删除记录 int deleteByMap(@Param(Constants.COLUMN_MAP) Map&lt;String, Object&gt; columnMap); 修改：Update // 根据 whereWrapper 条件，更新记录 int update(@Param(Constants.ENTITY) T updateEntity, @Param(Constants.WRAPPER) Wrapper&lt;T&gt; whereWrapper); // 根据 ID 修改 int updateById(@Param(Constants.ENTITY) T entity); 查询：Selete // 根据 ID 查询 T selectById(Serializable id); // 根据 entity 条件，查询一条记录 T selectOne(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 查询（根据ID 批量查询） List&lt;T&gt; selectBatchIds(@Param(Constants.COLLECTION) Collection&lt;? extends Serializable&gt; idList); // 根据 entity 条件，查询全部记录 List&lt;T&gt; selectList(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 查询（根据 columnMap 条件） List&lt;T&gt; selectByMap(@Param(Constants.COLUMN_MAP) Map&lt;String, Object&gt; columnMap); // 根据 Wrapper 条件，查询全部记录 List&lt;Map&lt;String, Object&gt;&gt; selectMaps(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 Wrapper 条件，查询全部记录。注意： 只返回第一个字段的值 List&lt;Object&gt; selectObjs(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 entity 条件，查询全部记录（并翻页） IPage&lt;T&gt; selectPage(IPage&lt;T&gt; page, @Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 Wrapper 条件，查询全部记录（并翻页） IPage&lt;Map&lt;String, Object&gt;&gt; selectMapsPage(IPage&lt;T&gt; page, @Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper); // 根据 Wrapper 条件，查询总记录数 Integer selectCount(@Param(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:06:48.000Z"}],["meta",{"property":"article:author","content":"李广妮"}],["meta",{"property":"article:tag","content":"ORM"}],["meta",{"property":"article:tag","content":"MyBatisPlus"}],["meta",{"property":"article:published_time","content":"2023-02-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:06:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CRUD实现\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:06:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李广妮\\",\\"url\\":\\"https://notes.819000.xyz\\"}]}"]]},"headers":[{"level":2,"title":"BaseMapper<T>实现CRUD","slug":"basemapper-t-实现crud","link":"#basemapper-t-实现crud","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"提供方法列表","slug":"提供方法列表","link":"#提供方法列表","children":[]}]},{"level":2,"title":"调用Mapper层实现CRUD","slug":"调用mapper层实现crud","link":"#调用mapper层实现crud","children":[{"level":3,"title":"插入操作","slug":"插入操作","link":"#插入操作","children":[]},{"level":3,"title":"查询操作","slug":"查询操作","link":"#查询操作","children":[]},{"level":3,"title":"更新操作","slug":"更新操作","link":"#更新操作","children":[]},{"level":3,"title":"删除操作","slug":"删除操作","link":"#删除操作","children":[]}]},{"level":2,"title":"通用Service实现CRUD","slug":"通用service实现crud","link":"#通用service实现crud","children":[{"level":3,"title":"IService中提供的CRUD方法","slug":"iservice中提供的crud方法","link":"#iservice中提供的crud方法","children":[]},{"level":3,"title":"调用Service层操作数据","slug":"调用service层操作数据","link":"#调用service层操作数据","children":[]}]},{"level":2,"title":"自定义Mapper文件查询","slug":"自定义mapper文件查询","link":"#自定义mapper文件查询","children":[]}],"git":{"createdTime":1678871208000,"updatedTime":1678871208000,"contributors":[{"name":"liguangni","email":"liguangfenglucky@163.com","commits":1}]},"readingTime":{"minutes":7.92,"words":2375},"filePathRelative":"backend/orm/mybatisplus/20.核心功能/10.CRUD实现.md","localizedDate":"2023年2月23日","excerpt":"<hr>\\n<h2> BaseMapper&lt;T&gt;实现CRUD</h2>\\n<h3> 简介</h3>\\n<p>MyBatis-Plus中的基本CRUD在内置的BaseMapper中都已得到了实现，因此我们继承该接口以后可以直接使用。</p>\\n<h3> 提供方法列表</h3>\\n<ul>\\n<li>\\n<p><strong>增加：Insert</strong></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 插入一条记录</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">T</span> entity<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>删除：Delete</strong></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 根据 entity 条件，删除记录</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> wrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 删除（根据ID 批量删除）</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">deleteBatchIds</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">COLLECTION</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Collection</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Serializable</span><span class=\\"token punctuation\\">&gt;</span></span> idList<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 ID 删除</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">deleteById</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Serializable</span> id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 columnMap 条件，删除记录</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">deleteByMap</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">COLUMN_MAP</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Map</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span></span> columnMap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>修改：Update</strong></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 根据 whereWrapper 条件，更新记录</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">update</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">ENTITY</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">T</span> updateEntity<span class=\\"token punctuation\\">,</span> <span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> whereWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 ID 修改</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">updateById</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">ENTITY</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">T</span> entity<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>查询：Selete</strong></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 根据 ID 查询</span>\\n<span class=\\"token class-name\\">T</span> <span class=\\"token function\\">selectById</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Serializable</span> id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 entity 条件，查询一条记录</span>\\n<span class=\\"token class-name\\">T</span> <span class=\\"token function\\">selectOne</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 查询（根据ID 批量查询）</span>\\n<span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectBatchIds</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">COLLECTION</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Collection</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Serializable</span><span class=\\"token punctuation\\">&gt;</span></span> idList<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 entity 条件，查询全部记录</span>\\n<span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectList</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 查询（根据 columnMap 条件）</span>\\n<span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectByMap</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">COLUMN_MAP</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Map</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span></span> columnMap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 Wrapper 条件，查询全部记录</span>\\n<span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Map</span><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectMaps</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 Wrapper 条件，查询全部记录。注意： 只返回第一个字段的值</span>\\n<span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectObjs</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 根据 entity 条件，查询全部记录（并翻页）</span>\\n<span class=\\"token class-name\\">IPage</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectPage</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IPage</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> page<span class=\\"token punctuation\\">,</span> <span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 Wrapper 条件，查询全部记录（并翻页）</span>\\n<span class=\\"token class-name\\">IPage</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Map</span><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectMapsPage</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IPage</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> page<span class=\\"token punctuation\\">,</span> <span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 根据 Wrapper 条件，查询总记录数</span>\\n<span class=\\"token class-name\\">Integer</span> <span class=\\"token function\\">selectCount</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Constants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">WRAPPER</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Wrapper</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">T</span><span class=\\"token punctuation\\">&gt;</span></span> queryWrapper<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{n as data};
